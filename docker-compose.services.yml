version: '3.8'

services:
  # Order Service
  order-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: order-service
    container_name: eCommerce-order-service
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    restart: on-failure

  # Inventory Service
  inventory-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: inventory-service
    container_name: eCommerce-inventory-service
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATA_MONGODB_HOST: mongo
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: e-commerce
      SPRING_DATA_MONGODB_USERNAME: admin
      SPRING_DATA_MONGODB_PASSWORD: password
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
    restart: on-failure

  # Email Service
  email-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: email-service
    container_name: eCommerce-email-service
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    restart: on-failure
